// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ORGANISATION
  EMPLOYEE
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  email        String        @unique
  password     String
  isActive     Boolean       @default(false)
  secretToken  String?
  role         Role
  transactions Transaction[]
  wallet       Wallet[]
  employee     Employee[]
  profile      Profile?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  deletedAt    DateTime?
}

model Profile {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  orgName   String?
  firstName String?
  lastName  String?
  email     String?  
  phone     String?
  country   String?
  state     String?
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?   @unique @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Employee {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String?
  lastName       String?
  email          String?
  wallet_address String?
  salary         Float?
  inviteCode     String  @unique
  organisation   String?
  user           User     @relation(fields: [userId], references: [id])
  userId         String   @db.ObjectId
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  sender    String?
  receiver  String?
  amount    Float?
  status    String?
  userID    String   @db.ObjectId
  user      User     @relation(fields: [userID], references: [id])
  createdAt DateTime @default(now())
}

model Wallet {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  address    String?
  privatekey String?
  xpubkey    String?
  userID     String   @db.ObjectId
  user       User     @relation(fields: [userID], references: [id])
  createdAt  DateTime @default(now())
}
